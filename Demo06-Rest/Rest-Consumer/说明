swagger地址：  http://127.0.0.1:8080/swagger-ui.html

http://127.0.0.1:8080/book/   是一个比较完事的REST的实现方式
RequestLineTest 是使用 RequestLine 进行http请求的功能
ismapiTest      是使用 restTemplate进行http请求的示例 pass


GET---获取
    安全、幂等；  用于获取资源；
POST--新增
    非安全、非幂等；    用于创建子资源
PUT---新增或修改；要看url里有没有指定
    非安全、幂等； 用于创建、更新资源；
DELETE
    非安全、幂等； 删除资源；

post和put的区别：
    post和put的区别在于uri，或者说post用于创建子资源，比如接口：POST /api/person/  会创建一个资源比如 /api/person/1或者/api/person/2 ... 或者/api/person/n，创建了新的uri，而put方法创建资源的uri是 PUT /api/person/1，这样就创建了一个资源，如果1已经存在那么就是更新，所以put并不是只是更新操作。再有post是非幂等的。
    通常情况下，我们都会将post、get、put、delete对应到CRUD操作上，但实际上put并不是只能更新。
========
OPTIONS
    安全、幂等；  用于url验证，验证接口服务是否正常；
TEACE
    安全、幂等；  维基百科“回显服务器收到的请求，这样客户端可以看到（如果有）哪一些改变或者添加已经被中间服务器实现。” restful框架中较少使用
PATCH---更新
    非安全、幂等； 用于创建、更新资源，于PUT类似，区别在于PATCH代表部分更新；   后来提出的接口方法，使用时可能去要验证客户端和服务端是否支持；
HEAD
    安全、幂等；  与get方法类似，但不返回message body内容，仅仅是获得获取资源的部分信息（content-type、content-length）；    restful框架中较少使用



