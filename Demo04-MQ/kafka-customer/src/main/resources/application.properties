# ----------------------------------------
# INTEGRATION PROPERTIES
# ----------------------------------------

# broker地址，可以多个 spring.kafka.bootstrap-servers=192.168.59.130:9092,192.168.59.131:9092,192.168.59.132:9092
spring.kafka.bootstrap-servers=192.168.40.80:9092
#spring.kafka.client-id= # Id to pass to the server when making requests; used for server-side logging.
#spring.kafka.consumer.auto-commit-interval= # Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true.

#earliest：当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
#latest ：当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
#none ：topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
spring.kafka.consumer.auto-offset-reset=earliest

#消费者组ID
spring.kafka.consumer.group-id=com.study.kafka.customer.group-id
#spring.kafka.consumer.client-id= # Id to pass to the server when making requests; used for server-side logging.
#自动提交,这里我们消费后，自己维护
spring.kafka.consumer.enable-auto-commit=false
#spring.kafka.consumer.fetch-max-wait= # Maximum amount of time in milliseconds the server will block before answering the fetch request if there isn't sufficient data to immediately satisfy the requirement given by "fetch.min.bytes".
#spring.kafka.consumer.fetch-min-size= # Minimum amount of data the server should return for a fetch request in bytes.
#spring.kafka.consumer.heartbeat-interval= # Expected time in milliseconds between heartbeats to the consumer coordinator.

#key列表化
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.BytesDeserializer
#value序列化
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.BytesDeserializer
#单次最大读取记录个数
spring.kafka.consumer.max-poll-records=500
#spring.kafka.listener.ack-count= # Number of records between offset commits when ackMode is "COUNT" or "COUNT_TIME".
#spring.kafka.listener.ack-mode= # Listener AckMode; see the spring-kafka documentation.
#spring.kafka.listener.ack-time= # Time in milliseconds between offset commits when ackMode is "TIME" or "COUNT_TIME".
#指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency=3
#spring.kafka.listener.poll-timeout= # Timeout in milliseconds to use when polling the consumer.
#spring.kafka.ssl.key-password= # Password of the private key in the key store file.
#spring.kafka.ssl.keystore-location= # Location of the key store file.
#spring.kafka.ssl.keystore-password= # Store password for the key store file.
#spring.kafka.ssl.truststore-location= # Location of the trust store file.
#spring.kafka.ssl.truststore-password= # Store password for the trust store file.

#关注的topic信息
kafka.test.topic.testA=kafka.test.topic.testA

